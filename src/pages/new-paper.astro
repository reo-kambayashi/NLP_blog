---
import Layout from "../layouts/Layout.astro";
---

<Layout title="新しい論文を追加 - 論文メモ">
  <div class="add-paper">
    <div class="page-header">
      <h1>📝 新しい論文を追加</h1>
      <p>読んだ論文の詳細な情報とメモを記録します。</p>
    </div>

    <form id="paperForm" class="paper-form">
      <div class="form-section">
        <h2>基本情報</h2>

        <div class="form-group">
          <label for="title" class="required">論文タイトル</label>
          <input type="text" id="title" name="title" required />
        </div>

        <div class="form-group">
          <label for="authors" class="required">著者</label>
          <input
            type="text"
            id="authors"
            name="authors"
            placeholder="著者名をカンマ区切りで入力"
            required
          />
          <small>例: 山田太郎, 田中花子, John Smith</small>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="venue" class="required">発表先</label>
            <input
              type="text"
              id="venue"
              name="venue"
              placeholder="例: NIPS, AAAI, ACL"
              required
            />
          </div>

          <div class="form-group">
            <label for="year" class="required">発表年</label>
            <input
              type="number"
              id="year"
              name="year"
              min="1900"
              max="2030"
              required
            />
          </div>
        </div>

        <div class="form-group">
          <label for="url">論文URL</label>
          <input
            type="url"
            id="url"
            name="url"
            placeholder="https://arxiv.org/abs/..."
          />
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="readDate" class="required">読了日</label>
            <input type="date" id="readDate" name="readDate" required />
          </div>

          <div class="form-group">
            <label for="rating" class="required">評価</label>
            <select id="rating" name="rating" required>
              <option value="">選択してください</option>
              <option value="5">⭐⭐⭐⭐⭐ (5) - 素晴らしい</option>
              <option value="4">⭐⭐⭐⭐☆ (4) - 良い</option>
              <option value="3">⭐⭐⭐☆☆ (3) - 普通</option>
              <option value="2">⭐⭐☆☆☆ (2) - 微妙</option>
              <option value="1">⭐☆☆☆☆ (1) - 良くない</option>
            </select>
          </div>
        </div>

        <div class="form-group">
          <label for="tags">タグ</label>
          <input
            type="text"
            id="tags"
            name="tags"
            placeholder="タグをカンマ区切りで入力"
          />
          <small>例: Transformer, Attention, NLP, 機械学習</small>
        </div>
      </div>

      <div class="form-section">
        <h2>論文の内容</h2>

        <div class="form-group">
          <label for="summary" class="required">概要</label>
          <textarea
            id="summary"
            name="summary"
            rows="4"
            placeholder="論文の概要を簡潔に記述..."
            required></textarea>
        </div>

        <div class="form-group">
          <label for="methodology" class="required">手法・方法論</label>
          <textarea
            id="methodology"
            name="methodology"
            rows="4"
            placeholder="使用された手法や方法論について..."
            required></textarea>
        </div>

        <div class="form-group">
          <label for="keyFindings" class="required">主な発見・結果</label>
          <textarea
            id="keyFindings"
            name="keyFindings"
            rows="4"
            placeholder="重要な発見や結果を箇条書きで..."
            required></textarea>
          <small>各項目を改行で区切って入力してください</small>
        </div>

        <div class="form-group">
          <label for="strengths" class="required">強み</label>
          <textarea
            id="strengths"
            name="strengths"
            rows="3"
            placeholder="論文の強みや優れた点..."
            required></textarea>
          <small>各項目を改行で区切って入力してください</small>
        </div>

        <div class="form-group">
          <label for="weaknesses">弱み・課題</label>
          <textarea
            id="weaknesses"
            name="weaknesses"
            rows="3"
            placeholder="論文の弱みや課題..."></textarea>
          <small>各項目を改行で区切って入力してください</small>
        </div>

        <div class="form-group">
          <label for="futureWork">今後の研究方向</label>
          <textarea
            id="futureWork"
            name="futureWork"
            rows="3"
            placeholder="今後の研究の方向性や可能性..."></textarea>
        </div>

        <div class="form-group">
          <label for="personalNotes">個人的メモ</label>
          <textarea
            id="personalNotes"
            name="personalNotes"
            rows="4"
            placeholder="個人的な感想や思考、関連する研究など..."></textarea>
        </div>
      </div>

      <div class="form-actions">
        <button type="submit" class="btn btn-primary">論文メモを保存</button>
        <a href="/papers" class="btn btn-secondary">キャンセル</a>
      </div>
    </form>
  </div>

  <!-- 成功メッセージ -->
  <div id="successMessage" class="success-message" style="display: none;">
    <div class="message-content">
      <h3>✅ 論文メモを保存しました！</h3>
      <p>新しい論文メモが正常に追加されました。</p>
      <div class="message-actions">
        <a href="/papers" class="btn btn-primary">論文一覧を見る</a>
        <button id="addAnother" class="btn btn-secondary">続けて追加</button>
      </div>
    </div>
  </div>
</Layout>

<script>
  // 今日の日付をデフォルトに設定
  document.getElementById("readDate").valueAsDate = new Date();

  // フォーム送信処理
  document.getElementById("paperForm").addEventListener("submit", function (e) {
    e.preventDefault();

    const formData = new FormData(e.target);
    const paperData = {};

    // フォームデータを取得
    for (let [key, value] of formData.entries()) {
      paperData[key] = value.trim();
    }

    // 配列型のフィールドを処理
    paperData.authors = paperData.authors
      .split(",")
      .map((s) => s.trim())
      .filter((s) => s);
    paperData.tags = paperData.tags
      ? paperData.tags
          .split(",")
          .map((s) => s.trim())
          .filter((s) => s)
      : [];
    paperData.keyFindings = paperData.keyFindings
      .split("\n")
      .map((s) => s.trim())
      .filter((s) => s);
    paperData.strengths = paperData.strengths
      .split("\n")
      .map((s) => s.trim())
      .filter((s) => s);
    paperData.weaknesses = paperData.weaknesses
      ? paperData.weaknesses
          .split("\n")
          .map((s) => s.trim())
          .filter((s) => s)
      : [];

    // 数値型の変換
    paperData.year = parseInt(paperData.year);
    paperData.rating = parseInt(paperData.rating);

    // IDを生成
    paperData.id = Date.now().toString();

    try {
      // ローカルストレージに保存
      const existingPapers = JSON.parse(localStorage.getItem("papers") || "[]");
      existingPapers.unshift(paperData);
      localStorage.setItem("papers", JSON.stringify(existingPapers));

      // 成功メッセージを表示
      document.querySelector(".add-paper").style.display = "none";
      document.getElementById("successMessage").style.display = "flex";
    } catch (error) {
      console.error("保存エラー:", error);
      alert("論文メモの保存に失敗しました。もう一度お試しください。");
    }
  });

  // 続けて追加ボタン
  document.getElementById("addAnother").addEventListener("click", function () {
    document.getElementById("successMessage").style.display = "none";
    document.querySelector(".add-paper").style.display = "block";
    document.getElementById("paperForm").reset();
    document.getElementById("readDate").valueAsDate = new Date();
    window.scrollTo(0, 0);
  });

  // フォームバリデーション
  const requiredFields = document.querySelectorAll("[required]");
  requiredFields.forEach((field) => {
    field.addEventListener("blur", function () {
      if (!this.value.trim()) {
        this.classList.add("error");
      } else {
        this.classList.remove("error");
      }
    });

    field.addEventListener("input", function () {
      if (this.value.trim()) {
        this.classList.remove("error");
      }
    });
  });
</script>

<style>
  .add-paper {
    max-width: 800px;
    margin: 0 auto;
  }

  .page-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .page-header h1 {
    font-size: 2.5rem;
    margin: 0 0 0.5rem 0;
    color: #1e293b;
  }

  .page-header p {
    color: #64748b;
    font-size: 1.125rem;
    margin: 0;
  }

  .paper-form {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    border: 1px solid #e2e8f0;
  }

  .form-section {
    margin-bottom: 2rem;
  }

  .form-section:last-of-type {
    margin-bottom: 0;
  }

  .form-section h2 {
    font-size: 1.5rem;
    margin: 0 0 1.5rem 0;
    color: #1e293b;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid #e2e8f0;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: #374151;
  }

  .form-group label.required::after {
    content: " *";
    color: #ef4444;
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 1rem;
    transition:
      border-color 0.2s,
      box-shadow 0.2s;
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .form-group input.error,
  .form-group select.error,
  .form-group textarea.error {
    border-color: #ef4444;
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
  }

  .form-group small {
    display: block;
    margin-top: 0.25rem;
    color: #6b7280;
    font-size: 0.875rem;
  }

  .form-group textarea {
    resize: vertical;
    min-height: 100px;
  }

  .form-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid #e5e7eb;
  }

  .btn {
    padding: 0.75rem 2rem;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }

  .btn-primary {
    background: #3b82f6;
    color: white;
  }

  .btn-primary:hover {
    background: #2563eb;
    transform: translateY(-2px);
  }

  .btn-secondary {
    background: #6b7280;
    color: white;
  }

  .btn-secondary:hover {
    background: #4b5563;
    transform: translateY(-2px);
  }

  .success-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    align-items: center;
    justify-content: center;
  }

  .message-content {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    text-align: center;
    max-width: 500px;
    width: 90%;
  }

  .message-content h3 {
    margin: 0 0 1rem 0;
    color: #059669;
    font-size: 1.5rem;
  }

  .message-content p {
    margin: 0 0 1.5rem 0;
    color: #6b7280;
  }

  .message-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  @media (max-width: 768px) {
    .paper-form {
      padding: 1.5rem;
    }

    .form-row {
      grid-template-columns: 1fr;
    }

    .form-actions {
      flex-direction: column;
    }

    .btn {
      width: 100%;
    }

    .message-actions {
      flex-direction: column;
    }
  }
</style>
